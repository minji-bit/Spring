<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 22 May 2025 00:37:32 GMT</lastBuildDate><item><title><![CDATA[Spring for Apache Pulsar 1.1.12 and 1.2.6 are now available]]></title><link>https://spring.io/blog/2025/05/22/spring-for-apache-pulsar-1-1-12-and-1-2-6-are-now-available</link><guid isPermaLink="true">https://spring.io/blog/2025/05/22/spring-for-apache-pulsar-1-1-12-and-1-2-6-are-now-available</guid><dc:creator><![CDATA[onobc]]></dc:creator><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, I¡¯m happy to announce that Spring for Apache Pulsar &lt;code&gt;1.1.12&lt;/code&gt; and &lt;code&gt;1.2.6&lt;/code&gt; have been released and are now available from Maven Central.&lt;/p&gt;
&lt;p&gt;The releases will be included in the upcoming Spring Boot &lt;a href=&quot;https://github.com/spring-projects/spring-boot/milestones/3.3.12&quot;&gt;3.3.12&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-projects/spring-boot/milestones/3.4.6&quot;&gt;3.4.6&lt;/a&gt; releases, respectively.&lt;/p&gt;
&lt;p&gt;Please see the release notes (&lt;a href=&quot;https://github.com/spring-projects/spring-pulsar/releases/tag/v1.1.12&quot;&gt;1.1.12&lt;/a&gt; and &lt;a href=&quot;https://github.com/spring-projects/spring-pulsar/releases/tag/v1.2.6&quot;&gt;1.2.6&lt;/a&gt;) for more details.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Reactor Kafka Project Will Be Discontinued]]></title><link>https://spring.io/blog/2025/05/20/reactor-kafka-discontinued</link><guid isPermaLink="true">https://spring.io/blog/2025/05/20/reactor-kafka-discontinued</guid><dc:creator><![CDATA[jasonkonicki]]></dc:creator><pubDate>Tue, 20 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;h1 id=&quot;reactor-kafka-project-will-be-discontinued&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#reactor-kafka-project-will-be-discontinued&quot; aria-label=&quot;reactor kafka project will be discontinued permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reactor Kafka Project Will Be Discontinued&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; We¡¯ve decided to discontinue future maintenance of the Reactor Kafka project and deprecate its associated components within the Spring portfolio.&lt;/p&gt;
&lt;p&gt;Our team regularly evaluates our project portfolio with long-term sustainability in mind. When adoption declines, we thoughtfully retire projects to focus our efforts where the community needs them most. Based on an assessment of adoption metrics, download trends, project activity, and how Reactor Kafka fits into our overall strategy, we¡¯ve decided to end maintenance and integrations for the project.&lt;/p&gt;
&lt;p&gt;What does this mean for our users?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/reactor/reactor-kafka&quot;&gt;Reactor Kafka&lt;/a&gt; will be removed from all future releases of the Reactor BOM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reactor Kafka 1.3 will be the final minor release. We will provide only necessary updates and fixes until the end of our &lt;a href=&quot;https://projectreactor.io/support&quot;&gt;OSS and Commercial support dates&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring Cloud Stream - &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/tree/main/binders/kafka-binder/spring-cloud-stream-binder-kafka-reactive&quot;&gt;Reactor Kafka Binder&lt;/a&gt; will be deprecated and marked for future removal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Reactive template in Spring for Apache Kafka will be deprecated and marked for future removal.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We remain committed to the continued development of the Reactor ecosystem, including Reactor Core, Reactor Netty, and others.&lt;/p&gt;
&lt;p&gt;We sincerely thank everyone who has contributed to the success of the Reactor Kafka project over the years. If you have any questions or concerns, feel free to reach out through the relevant GitHub repositories or leave a comment below.&lt;/p&gt;
&lt;p&gt;Thank you,&lt;/p&gt;
&lt;p&gt;Project Reactor Team&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring AI 1.0 GA Released]]></title><link>https://spring.io/blog/2025/05/20/spring-ai-1-0-GA-released</link><guid isPermaLink="true">https://spring.io/blog/2025/05/20/spring-ai-1-0-GA-released</guid><dc:creator><![CDATA[markpollack]]></dc:creator><pubDate>Tue, 20 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the Spring AI engineering team and everyone who contributed to this release, I am very excited to announce the general availability of Spring AI 1.0. We have a great release blog lined up for you.&lt;/p&gt;
&lt;h2 id=&quot;getting-started&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#getting-started&quot; aria-label=&quot;getting started permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;All the new bits are in maven central.  Use the provided bom to import the dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;#x3C;dependencyManagement&gt;
    &amp;#x3C;dependencies&gt;
        &amp;#x3C;dependency&gt;
            &amp;#x3C;groupId&gt;org.springframework.ai&amp;#x3C;/groupId&gt;
            &amp;#x3C;artifactId&gt;spring-ai-bom&amp;#x3C;/artifactId&gt;
            &amp;#x3C;version&gt;1.0.0&amp;#x3C;/version&gt;
            &amp;#x3C;type&gt;pom&amp;#x3C;/type&gt;
            &amp;#x3C;scope&gt;import&amp;#x3C;/scope&gt;
        &amp;#x3C;/dependency&gt;
    &amp;#x3C;/dependencies&gt;
&amp;#x3C;/dependencyManagement&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Checkout the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/upgrade-notes.html#upgrading-to-1-0-0-GA&quot;&gt;Upgrade Notes&lt;/a&gt; for the latest breaking changes and how to upgrade.  NOTE: You can automate the upgrade process to 1.0.0-GA using an OpenRewrite recipe. This recipe helps apply many of the necessary code changes for this version. Find the recipe and usage instructions at &lt;a href=&quot;https://github.com/arconia-io/arconia-migrations/blob/main/docs/spring-ai.md&quot;&gt;Arconia Spring AI Migrations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can get started creating 1.0 GA apps on the &lt;a href=&quot;https://start.spring.io&quot;&gt;Intialzr website&lt;/a&gt; and read our &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; section in the reference documentation.&lt;/p&gt;
&lt;h2 id=&quot;friends-and-family&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#friends-and-family&quot; aria-label=&quot;friends and family permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Friends and Family&lt;/h2&gt;
&lt;p&gt;Second are a selection of blogs created for the 1.0 GA release from the many friends and family we have been working with over the past two years, showing how to use Spring AI in various ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Microsoft Azure  &lt;a href=&quot;https://techcommunity.microsoft.com/blog/appsonazureblog/spring-ai-1-0-ga-is-here---build-java-ai-apps-end-to-end-on-azure-today/4414763&quot;&gt;Blog&lt;/a&gt; and &lt;a href=&quot;https://youtu.be/nkB2fnq-HOg&quot;&gt;Video&lt;/a&gt;.  A special thanks to &lt;a href=&quot;https://www.linkedin.com/in/asir-architect-javaonazure&quot;&gt;Asir Selvasingh&lt;/a&gt; who helped us &lt;a href=&quot;https://youtu.be/zIYmgEbUl4U?feature=shared&amp;#x26;t=4970&quot;&gt;launch Spring AI&lt;/a&gt; back at the Spring One conference in Vegas in 2023.&lt;/li&gt;
&lt;li&gt;AWS  - &lt;a href=&quot;https://community.aws/content/2xLkItwKHrZ5EweKTz9uPpYHyPk/spring-ai-1-0-brings-ai-to-the-developer-masses&quot;&gt;Blog&lt;/a&gt; - Spring AI 1.0 Brings AI to the Developer Masses&lt;/li&gt;
&lt;li&gt;Google - &lt;a href=&quot;https://cloud.google.com/blog/topics/developers-practitioners/google-cloud-and-spring-ai-10&quot;&gt;Blog&lt;/a&gt; - Google Cloud and Spring AI 1.0&lt;/li&gt;
&lt;li&gt;Cloud Foundry - &lt;a href=&quot;https://youtu.be/mBMq2BqfjyA&quot;&gt;Video&lt;/a&gt; - Spring AI and CloudFoundry: Bootiful, Agentic, Production-Worthy, Cloud-Native Systems and Services&lt;/li&gt;
&lt;li&gt;Elastic - &lt;a href=&quot;https://www.elastic.co/search-labs/blog/spring-ai-elasticsearch-application&quot;&gt;Blog&lt;/a&gt; - Spring AI and Elasticsearch as your vector database&lt;/li&gt;
&lt;li&gt;Redis  &lt;a href=&quot;https://redis.io/blog/build-fast-production-worthy-ai-apps-with-spring-ai-and-redis/&quot;&gt;Blog&lt;/a&gt; - Build fast, production-worthy AI apps with Spring AI and Redis&lt;/li&gt;
&lt;li&gt;MongoDB - &lt;a href=&quot;https://dev.to/mongodb/how-to-build-rag-applications-with-spring-ai-and-mongodb-5gaj&quot;&gt;Blog&lt;/a&gt; - Spring AI and MongoDB: How to Build RAG Applications&lt;/li&gt;
&lt;li&gt;Oracle - &lt;a href=&quot;https://blogs.oracle.com/developers/post/spring-ai-10-ga-released-with-oracle-vector-database-support&quot;&gt;Blog&lt;/a&gt; - Spring AI 1.0 GA released with Oracle Vector Database support&lt;/li&gt;
&lt;li&gt;InfoQ &lt;a href=&quot;https://www.infoq.com/news/2025/05/spring-ai-1-0-streamlines-apps/&quot;&gt;Article&lt;/a&gt; - Spring AI 1.0 Released, Streamlines AI Application Development with Broad Model Support&lt;/li&gt;
&lt;li&gt;The New Stack &lt;a href=&quot;https://thenewstack.io/production-worthy-ai-with-spring-ai-1-0/&quot;&gt;Article&lt;/a&gt; - Production-Worthy AI With Spring AI 1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, there is a comprehensive article from Josh Long demonstrating how to use &lt;a href=&quot;https://spring.io/blog/2025/05/20/your-first-spring-ai-1&quot;&gt;Spring AI with Anthropic&apos;s Claude&lt;/a&gt;, as well as an article from Daniel Garnier-Moiroux in his blog &lt;a href=&quot;https://spring.io/blog/2025/05/19/spring-ai-mcp-client-oauth2&quot;&gt;MCP Authorization in practice with Spring AI and OAuth2&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;new-song&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#new-song&quot; aria-label=&quot;new song permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Song&lt;/h2&gt;
&lt;p&gt;First up, of course, is a new song.  Check out the &lt;a href=&quot;https://suno.com/s/b0y64IKfpE5m3akD&quot;&gt;latest track&lt;/a&gt; in the &lt;a href=&quot;https://suno.com/playlist/321b61a4-201d-4404-9335-bf909250b0e3&quot;&gt;Spring AI play list&lt;/a&gt; - it will make you &lt;a href=&quot;https://www.youtube.com/watch?v=ZbZSe6N_BXs&quot;&gt;happy&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;new-logo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#new-logo&quot; aria-label=&quot;new logo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Logo&lt;/h2&gt;
&lt;p&gt;Third, we have a new Spring AI logo! Many thanks to &lt;a href=&quot;https://x.com/sergialmar&quot;&gt;Sergi Almar&lt;/a&gt;, the organizer of the &lt;a href=&quot;https://2025.springio.net/&quot;&gt;Spring IO conference&lt;/a&gt;, and designer &lt;a href=&quot;https://x.com/jrigabert&quot;&gt;Jorge Rigabert&lt;/a&gt; for creating such a nice logo. The modifications possible with the lowercase letter &apos;i&apos; are fascinating to see.&lt;/p&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/spring-io/spring-io-static/refs/heads/main/blog/tzolov/20250520/spring-ai-logo.png&quot; width=&quot;250&quot; style=&quot;display: block; margin-left: auto; margin-right: auto;&quot;&gt;
&lt;h2 id=&quot;spring-ai-10-ga-tour&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-ai-10-ga-tour&quot; aria-label=&quot;spring ai 10 ga tour permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring AI 1.0 GA Tour&lt;/h2&gt;
&lt;p&gt;Let&apos;s take a tour of the Spring AI 1.0 GA feature set.&lt;/p&gt;
&lt;p&gt;At the heart of  Spring AI is the &lt;code&gt;ChatClient&lt;/code&gt; , a &lt;strong&gt;portable and easy to use API&lt;/strong&gt; that is the primary interface for interacting with AI models.&lt;/p&gt;
&lt;p&gt;Spring AI¡¯s ChatClient supports invoking &lt;strong&gt;20&lt;/strong&gt; AI Models, from Anthropic to ZhiPu. It supports multi-modal inputs and output (when supported by the underlying model) and structured responses - most often in JSON for easier processing of output in your application.&lt;/p&gt;
&lt;p&gt;For a detailed comparsion of the feature set for AI models, visit the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/comparison.html&quot;&gt;Chat Models Comparison&lt;/a&gt; in our reference docs.&lt;/p&gt;
&lt;p&gt;Read our &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chatclient.html&quot;&gt;reference docs for more information on &lt;code&gt;ChatClient&lt;/code&gt;&lt;/a&gt;.  You can see it in action in &lt;a href=&quot;https://spring.io/blog/2025/05/20/your-first-spring-ai-1#the-assistant&quot;&gt;Josh&apos;s blog&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;prompts&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#prompts&quot; aria-label=&quot;prompts permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prompts&lt;/h3&gt;
&lt;p&gt;Creating the right prompts, what you pass to the model, is an important skill.  There are several patterns to get the most out of the AI model to get the best results.&lt;br&gt;
You can &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/prompt.html&quot;&gt;find example usage of prompt in the reference docs&lt;/a&gt;.
Spring AI¡¯s reference documentationa also covers &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat/prompt-engineering-patterns.html&quot;&gt;Prompt Engineering techniques&lt;/a&gt; with example code based on the comprehensive Prompt Engineering Guide.&lt;/p&gt;
&lt;h2 id=&quot;the-augmented-llm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-augmented-llm&quot; aria-label=&quot;the augmented llm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Augmented LLM&lt;/h2&gt;
&lt;p&gt;However, real-world AI applications go beyond simple request/response interactions with a stateless AI Model API.&lt;/p&gt;
&lt;p&gt;To build effective AI applications, a supporting cast of features is essential.  This is where the concept of the &lt;a href=&quot;https://www.anthropic.com/engineering/building-effective-agents&quot;&gt;Augmented LLM&lt;/a&gt; , depicted below, adds to the base model interaction with capabilities such as data retrieval, conversational memory, and tool calling.  These capabilities allow you to bring your own data and external APIs directly into the model¡¯s reasoning process.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/spring-io/spring-io-static/refs/heads/main/blog/tzolov/20250520/anthropic-augmented-llm-concept.png&quot; alt=&quot;Augmented LLM&quot;&gt;&lt;/p&gt;
&lt;p&gt;Key to implementing this pattern in Spring AI are Advisors&lt;/p&gt;
&lt;h2 id=&quot;advisors&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#advisors&quot; aria-label=&quot;advisors permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advisors&lt;/h2&gt;
&lt;p&gt;A key feature of Spring AI¡¯s ChatClient is the Advisor API.  This is an interceptor chain that allows you to modify the ingoing prompt by injecting retrieve data and conversation memory.&lt;/p&gt;
&lt;p&gt;You can read more about them in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/advisors.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let¡¯s now dive into each component of the Augmented LLM.&lt;/p&gt;
&lt;h2 id=&quot;retrieval&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#retrieval&quot; aria-label=&quot;retrieval permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieval&lt;/h2&gt;
&lt;p&gt;At the heart of retrieving data in AI applications is a database and vector databases in particular are the most common for this purpose.  Spring AI provides a portable vetor store abstraction that supports &lt;strong&gt;20&lt;/strong&gt; different vector databases, for Azure Cosmos DB to Weaviate.&lt;/p&gt;
&lt;p&gt;A common challenge working with these databases is that each has its own unique query language for metadata filtering.  Spring AI solves this with a portable filter expression language that uses a familiar SQL-like syntax.  If you every reach the limits of this abstraction, you can fall back to native queries&lt;/p&gt;
&lt;p&gt;Spring AI includes a lightweight, configurable &lt;strong&gt;ETL (Extract, Transform, Load) framework&lt;/strong&gt; to streamline the process of importing your data into a vector store. It supports a wide range of input sources through pluggable &lt;code&gt;DocumentReader&lt;/code&gt; components, including &lt;strong&gt;local file systems&lt;/strong&gt;, &lt;strong&gt;web pages&lt;/strong&gt;, &lt;strong&gt;GitHub repositories&lt;/strong&gt;, &lt;strong&gt;AWS S3&lt;/strong&gt;, &lt;strong&gt;Azure Blob Storage&lt;/strong&gt;, &lt;strong&gt;Google Cloud Storage&lt;/strong&gt;, &lt;strong&gt;Kafka&lt;/strong&gt;, &lt;strong&gt;MongoDB&lt;/strong&gt;, and &lt;strong&gt;JDBC-compatible databases&lt;/strong&gt;. This makes it easy to bring content from virtually anywhere into your RAG pipeline, with built-in support for chunking, metadata enrichment, and embedding generation.  You can read more about the ETL features in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/etl-pipeline.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Spring AI also comes with extensive support for the pattern of Retrieval Augmented Generation, or RAG, that enables the AI models to ground their responses based on the data you pass into it.  You can start simple with &lt;code&gt;QuestionAnswerAdvisor&lt;/code&gt; to inject relevant context into prompts, or scale up to a more sophisticated, modular RAG pipeline tailored to your application with the &lt;code&gt;RetrievalAugmentationAdvisor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can read more about them in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/retrieval-augmented-generation.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a tutorial on implementing RAG in your Spring AI applications, explore our &lt;a href=&quot;https://spring.io/blog/2025/05/20/your-first-spring-ai-1#retrieval-augmented-generation-rag-with-vector-stores&quot;&gt;guide to Retrieval Augmented Generation&lt;/a&gt; which walks through setting up vector stores, embedding documents, and creating effective retrieval pipelines with practical code samples.&lt;/p&gt;
&lt;h2 id=&quot;memory&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#memory&quot; aria-label=&quot;memory permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory&lt;/h2&gt;
&lt;p&gt;Conversational history is an essential ingredient in creating an AI chat application.  Spring AI supports this with the &lt;code&gt;ChatMemory&lt;/code&gt; interface, which manages the storing and retrieving of messages.  The &lt;code&gt;MessageWindowChatMemory&lt;/code&gt; implementation maintains the last N messages in a sliding windows, updating itself as the conversation progresses. It delegates to a &lt;code&gt;ChatMemoryRepository&lt;/code&gt; and we currently provide repository implementations for JDBC, Cassandra, and Neo4j, with more on the way.&lt;/p&gt;
&lt;p&gt;An alternative is to use the &lt;code&gt;VectorStoreChatMemoryAdvisor&lt;/code&gt;. Instead of just remembering the most recent messages, it uses vector search to retrieve the most semantically similar messages from past conversations.&lt;/p&gt;
&lt;p&gt;You can read more about them in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/chat-memory.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a walkthrough on implementing chat memory in your Spring AI applications, check out our &lt;a href=&quot;https://spring.io/blog/2025/05/20/your-first-spring-ai-1#chat-memory&quot;&gt;guide to chat memory implementation&lt;/a&gt; which covers both basic and advanced memory patterns, including code examples for persistent storage options.&lt;/p&gt;
&lt;h2 id=&quot;tools&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tools&quot; aria-label=&quot;tools permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tools&lt;/h2&gt;
&lt;p&gt;Spring AI makes it easy to extend what models can do through &lt;strong&gt;tools&lt;/strong&gt; ? custom functions that let AI retrieve external information or take real-world actions. Tool calling** (also referred to as &lt;strong&gt;function calling&lt;/strong&gt;) was first widely introduced by OpenAI in June 2023 with the release of their function calling feature in the &lt;code&gt;gpt-4&lt;/code&gt; and &lt;code&gt;gpt-3.5-turbo&lt;/code&gt; models.&lt;/p&gt;
&lt;p&gt;Tools can fetch current weather, query databases, or return the latest news, helping models answer questions beyond their training data. They can also trigger workflows, send emails, or update systems?turning the model into an active participant in your application. Defining tools is simple: use the &lt;code&gt;@Tool&lt;/code&gt; annotation for declarative methods, register beans dynamically with &lt;code&gt;@Bean&lt;/code&gt;, or create them programmatically for full control.&lt;/p&gt;
&lt;p&gt;You can read more about them in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/tools.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a walkthough on implementing tool calling in your Spring AI applications, see our &lt;a href=&quot;https://spring.io/blog/2025/05/20/your-first-spring-ai-1#local-tool-calling&quot;&gt;guide to local tool calling&lt;/a&gt; which demonstrates how to create, register, and use tools with practical examples and best practices.&lt;/p&gt;
&lt;h2 id=&quot;evaluation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#evaluation&quot; aria-label=&quot;evaluation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluation&lt;/h2&gt;
&lt;p&gt;Using this technology to create an application is all fun and games, but how do you know it is working?  Unfortunately, it isn¡¯t as straightforward as writing traditional unit or integration tests and seeing if the tests are green.  One needs to evaluate the response for the AI Model across a range of criteria.  For example, is the answer relevant to the question asked?  Did it hallucinate?  Was the answer based on the provided facts?&lt;/p&gt;
&lt;p&gt;To get a handle on this, one should start off doing so-called &apos;vibe checks&apos;.  As the name implies, this is manually reviewing the responses and using your own judgment to determine if the answer is correct.  Of course, this is time-consuming, so there is an evolving set of techniques to help automate this process.&lt;/p&gt;
&lt;p&gt;Spring AI makes it easy to check how accurate and relevant your AI-generated content is. It comes with a flexible &lt;code&gt;Evaluator&lt;/code&gt; interface and two handy built-in evaluators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RelevancyEvaluator&lt;/strong&gt; ? Helps you figure out if the AI&apos;s response actually matches the user¡¯s question and the retrieved context. It¡¯s perfect for testing RAG flows and uses a customizable prompt to ask another model, ¡°Does this response make sense based on what was retrieved?¡±&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;FactCheckingEvaluator&lt;/strong&gt; ? Verifies whether the AI¡¯s response is factually accurate based on the context provided. It works by asking the model to judge if a statement is logically supported by a document. You can run this using smaller models like Bespoke¡¯s Minicheck (via Ollama), making it way cheaper than using something like GPT-4 for every check.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, this isn¡¯t a silver bullet. &lt;a href=&quot;https://clefourrier.github.io/&quot;&gt;Cl?mentine Fourrier&lt;/a&gt;, lead maintainer of Hugging Face&apos;s Open LLM Leaderboard, warns that &lt;strong&gt;&quot;LLMs as judges&quot; are not a silver bullet&lt;/strong&gt;. In her interview on the &lt;a href=&quot;https://deepcast.fm/episode/benchmarks-201-why-leaderboards-arenas-llm-as-judge&quot;&gt;Latent Space Podcast&lt;/a&gt; she outlines key issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Mode collapse and positional bias&lt;/strong&gt;: LLM judges often favor answers from models in the same family or the first response shown.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Verbose bias&lt;/strong&gt;: Models rate longer answers more favorably, regardless of accuracy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Poor at scoring&lt;/strong&gt;: Ranking is more reliable than assigning scores; even then, reproducibility is weak.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Overconfidence bias&lt;/strong&gt;: People?and models?often prefer assertive answers, even when wrong.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can read more about Evaluation in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/testing.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So best of luck!  To get started, check out &lt;a href=&quot;https://www.baeldung.com/spring-ai-testing-ai-evaluators&quot;&gt;some&lt;/a&gt; &lt;a href=&quot;https://medium.com/@udayani.vaka/evaluating-llm-responses-with-spring-ai-evaluator-and-deepeval-3df6e32d806c&quot;&gt;nice&lt;/a&gt; &lt;a href=&quot;https://www.javacodegeeks.com/spring-ai-testing-ai-evaluators-example.html&quot;&gt;articles&lt;/a&gt; that show the use of these evaluators.&lt;/p&gt;
&lt;h2 id=&quot;observability&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#observability&quot; aria-label=&quot;observability permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observability&lt;/h2&gt;
&lt;p&gt;When you&apos;re running AI in production, you need more than hope and good vibes?you need &lt;strong&gt;observability&lt;/strong&gt;. Spring AI makes it easy to observe what your models are doing, how they¡¯re performing, and what it¡¯s all costing you.&lt;/p&gt;
&lt;p&gt;Spring AI integrates with &lt;strong&gt;Micrometer&lt;/strong&gt; to provide detailed telemetry on key metrics like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Model latency&lt;/strong&gt; ? How long it takes for your model to respond (not just emotionally).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Token usage&lt;/strong&gt; ? Input/output tokens per request, so you can track and optimize costs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tool calls and retrievals&lt;/strong&gt; ? Know when your model is acting like a helpful assistant vs. just freeloading on your vector store.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You also get full tracing support via &lt;strong&gt;Micrometer Tracing&lt;/strong&gt;, with spans for each major step in a model interaction.  You can also get log messages that can be helpful for troubleshooting so that you can see what was the user prompt or the vector store response.&lt;/p&gt;
&lt;p&gt;You can read more about Evaluation in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/observability/index.html&quot;&gt;section in the reference documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;model-context-protocol&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#model-context-protocol&quot; aria-label=&quot;model context protocol permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Context Protocol&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://modelcontextprotocol.io/introduction&quot;&gt;Model Context Protocol&lt;/a&gt; (MCP) came on the scene in November of 2024. It took off like wildfire because it provides a standardized way for AI models to interact with external tools, prompts, and resources. MCP is a client-server oriented protocol and once you build an MCP server, you can easily adopt it in your application, no matter what programming language the MCP server was written in or what programming language the MCP client is written in.&lt;/p&gt;
&lt;p&gt;This has really taken off in the tool space, though MCP isn&apos;t limited to tools. Now you can use &apos;out of the box&apos; MCP servers for specific functionality like interacting with GitHub, without having to write that code yourself. From the AI tool perspective, it is like a class library of tools that you can easily add to your application.&lt;/p&gt;
&lt;p&gt;The Spring AI team started support for MCP shortly after the specification was released and this code was then &lt;a href=&quot;https://spring.io/blog/2025/02/14/mcp-java-sdk-released-2&quot;&gt;donated to Anthropic&lt;/a&gt; as the basis for the &lt;a href=&quot;https://github.com/modelcontextprotocol/java-sdk&quot;&gt;MCP Java SDK&lt;/a&gt;.   Spring AI provides a &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/mcp/mcp-overview.html&quot;&gt;rich set of features&lt;/a&gt; around this foundation.&lt;/p&gt;
&lt;h3 id=&quot;mcp-clients&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mcp-clients&quot; aria-label=&quot;mcp clients permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MCP Clients&lt;/h3&gt;
&lt;p&gt;Spring AI makes consuming Model Context Protocol (MCP) tools straightforward through its client-side starter module. By adding the `spring-ai-starter-mcp-client` dependency, you&apos;ll quickly connect with remote MCP servers. Spring Boot&apos;s auto-configuration handles the heavy lifting, so your client can invoke tools exposed by an MCP server without excessive boilerplate - letting you focus on building effective AI workflows. Spring makes it easy to connect to both stdio and HTTP-based SSE endpoints provided by MCP servers.&lt;/p&gt;
&lt;p&gt;For a practical introduction, check out the &lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/client-starter/starter-default-client&quot;&gt;MCP Client Example&lt;/a&gt; which demonstrates connecting to an MCP server that provides Brave web search - so you can add powerful search features right in your Spring app.&lt;/p&gt;
&lt;p&gt;For a walkthrough on implementing Model Context Protocol in your Spring AI applications, see our &lt;a href=&quot;https://spring.io/blog/2025/05/20/your-first-spring-ai-1#model-context-protocol&quot;&gt;guide to MCP&lt;/a&gt; which explains how to set up both client and server components, connect to external tools, and leverage the protocol for enhanced AI capabilities.&lt;/p&gt;
&lt;h3 id=&quot;mcp-servers&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mcp-servers&quot; aria-label=&quot;mcp servers permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MCP Servers&lt;/h3&gt;
&lt;p&gt;Spring AI simplifies creating MCP servers with its dedicated starter module and intuitive annotation-based approach. Add the &lt;code&gt;spring-ai-starter-mcp-server&lt;/code&gt; dependency, and you can quickly transform Spring components into MCP-compliant servers.&lt;/p&gt;
&lt;p&gt;The framework offers a clean syntax using the @Tool annotation to expose methods as tools. Parameters are automatically converted to the appropriate MCP format, and the framework handles all the underlying protocol details - transport, serialization, and error handling  With minimal configuration, your Spring application can expose its functionality as both stdio and HTTP-based SSE endpoints.&lt;/p&gt;
&lt;p&gt;You&apos;ll find several helpful examples in the spring-ai-examples repository - a good one to start with is the &lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/weather/starter-stdio-server&quot;&gt;Spring AI MCP Weather STDIO Server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also check out projects in the Spring ecosystem that have started to embrace MCP with specialized servers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fmbenhassine/spring-batch-lab/tree/main/sandbox/spring-batch-mcp-server&quot;&gt;Spring Batch MCP Server&lt;/a&gt; exposes batch processing operations, allowing AI assistants to query job status, view step details, and analyze metrics to optimize workflows.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ryanjbaxter/spring-cloud-config/tree/mcp-server&quot;&gt;Spring Cloud Config MCP Server&lt;/a&gt; enables AI-accessible configuration management with tools to retrieve, update, and refresh configurations across environments and handle sensitive value encryption.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These servers bring Spring&apos;s enterprise capabilities into the growing MCP ecosystem&lt;/p&gt;
&lt;h3 id=&quot;mcp-and-security&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mcp-and-security&quot; aria-label=&quot;mcp and security permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MCP and Security&lt;/h3&gt;
&lt;p&gt;It should come as no surprise that in an enterprise environment you want to have a measure of control over what data is presented to the LLM as context and what APIs are made available, especially those that modify data/state. The MCP spec addresses these concerns via OAuth. Spring Security and the Spring Authorization Server have got you covered. Spring Security Guru Daniel goes into detail into Securing MCP applications in his blog &lt;a href=&quot;https://spring.io/blog/2025/05/19/spring-ai-mcp-client-oauth2&quot;&gt;MCP Authorization in practice with Spring AI and OAuth2&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;agents&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#agents&quot; aria-label=&quot;agents permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Agents&lt;/h2&gt;
&lt;p&gt;2025 is the year of the Agents.. The million-dollar question is &apos;define agent&apos;, well here is a shot at it :).  At its core, an agent &quot;leverages an AI model to interact with its environment in order to solve a user-defined task.&quot; Effective agents combine planning, memory, and actions to fulfill tasks assigned by users.&lt;/p&gt;
&lt;p&gt;There are two broad categories of agents,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Workflows&lt;/strong&gt; represent a more controlled approach where LLMs and tools are orchestrated through predefined paths. These workflows are prescriptive, guiding the AI through established sequences of operations to achieve predictable outcomes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Autonomous Agents&lt;/strong&gt;, by contrast, allow LLMs to autonomously plan and execute processing steps toward accomplishing tasks. These agents determine their own path, deciding which tools to use and in what order without explicit instruction.&lt;/p&gt;
&lt;p&gt;While fully autonomous agents are appealing for their flexibility, workflows offer better predictability and consistency for well-defined tasks. The choice between these approaches depends on your specific requirements and risk tolerance.&lt;/p&gt;
&lt;h3 id=&quot;workflow-driven-agents&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#workflow-driven-agents&quot; aria-label=&quot;workflow driven agents permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workflow Driven Agents&lt;/h3&gt;
&lt;p&gt;Spring AI supports several workflow patterns that structure agent behavior:  In the diagram below, each llm box is the &quot;augmented llm&quot; diagram shown earlier.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/agentic-patterns/evaluator-optimizer&quot;&gt;&lt;strong&gt;Evaluator Optimizer&lt;/strong&gt;&lt;/a&gt; ? The model analyzes its own responses and refines them through a structured process of self-evaluation.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/spring-io/spring-io-static/refs/heads/main/blog/tzolov/20250520/anthropic-augmented-llm-agents.png&quot; alt=&quot;Augmented LLM&quot;&gt;&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/agentic-patterns/routing-workflow&quot;&gt;&lt;strong&gt;Routing&lt;/strong&gt;&lt;/a&gt; ? This pattern enables intelligent routing of inputs to specialized handlers based on classification of the user request and context.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/agentic-patterns/orchestrator-workers&quot;&gt;&lt;strong&gt;Orchestrator Workers&lt;/strong&gt;&lt;/a&gt; ? This pattern is a flexible approach for handling complex tasks that require dynamic task decomposition and specialized processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/agentic-patterns/chain-workflow&quot;&gt;&lt;strong&gt;Chaining&lt;/strong&gt;&lt;/a&gt; ? The pattern decomposes complex tasks into a sequence of steps, where each LLM call processes the output of the previous one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/agentic-patterns/parallelization-worflow&quot;&gt;&lt;strong&gt;Parallelization&lt;/strong&gt;&lt;/a&gt; ? The pattern is useful for scenarios requiring parallel execution of LLM calls with automated output aggregation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These patterns can be implemented using Spring AI&apos;s chat model and tool execution capabilities, with the framework handling much of the underlying complexity.&lt;/p&gt;
&lt;p&gt;You can find out more in the &lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/agentic-patterns&quot;&gt;Spring AI Examples repository&lt;/a&gt; and in the &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/effective-agents.html&quot;&gt;Building Effective Agents&lt;/a&gt; section of our reference documentation.&lt;/p&gt;
&lt;h3 id=&quot;autonomously-driven-agents&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#autonomously-driven-agents&quot; aria-label=&quot;autonomously driven agents permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Autonomously Driven Agents&lt;/h3&gt;
&lt;p&gt;Spring AI also supports the development of autonomous agents through the Model Context Protocol. The incubating &lt;a href=&quot;https://github.com/tzolov/spring-mcp-agent&quot;&gt;Spring MCP Agent&lt;/a&gt; project demonstrates how to create agents that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Accept user instructions and autonomously determine the best approach&lt;/li&gt;
&lt;li&gt;Dynamically discover and utilize available tools through MCP&lt;/li&gt;
&lt;li&gt;Maintain an execution memory to track progress and decisions&lt;/li&gt;
&lt;li&gt;Recursively refine strategies based on outcomes&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;tanzu-ai-solutions-in-tanzu-platform&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tanzu-ai-solutions-in-tanzu-platform&quot; aria-label=&quot;tanzu ai solutions in tanzu platform permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tanzu AI Solutions in Tanzu Platform&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vmware.com/solutions/app-platform/ai&quot;&gt;Tanzu AI Solutions&lt;/a&gt; is available in Tanzu Platform 10 and above, and works best with Spring AI Apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enterprise-Grade AI Deployment&lt;/strong&gt;: Production-ready solution for deploying AI applications with enterprise-level security controls&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simplified, Self-Service Model Access&lt;/strong&gt;: Streamlined access to AI models through unified marketplace with curated AI models&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security and Governance&lt;/strong&gt;: AI middleware that enhances control with observability, token-based rate limiting, audit, metrics, logs, and journaling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scalable Infrastructure&lt;/strong&gt;: Built on Spring AI, the integration supports scalable deployment of AI applications while maintaining high performance&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about deploying AI applications with Tanzu AI Server, visit the &lt;a href=&quot;https://techdocs.broadcom.com/us/en/vmware-tanzu/platform-services/genai-on-tanzu-platform-for-cloud-foundry/10-0/ai-cf/reference-architecture.html&quot;&gt;VMware Tanzu AI documentation&lt;/a&gt; and for more information on building Agentic AI applications, checkout the blogs&lt;/p&gt;
&lt;p&gt;Recommended Reading on Agentic AI&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://news.broadcom.com/leadership/agentic-ai-a-new-ai-paradigm-driving-business-success&quot;&gt;&lt;strong&gt;Agentic AI: A New AI Paradigm Driving Business Success&lt;/strong&gt; ? Broadcom&lt;/a&gt;&lt;br&gt;
Explores how agentic AI is redefining enterprise strategy by enabling autonomous decision-making, reducing friction, and driving business transformation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://blogs.vmware.com/tanzu/ai-agents-why-workflows-are-the-llm-use-case-to-watch/&quot;&gt;&lt;strong&gt;AI Agents: Why Workflows Are the LLM Use Case to Watch&lt;/strong&gt; ? VMware Tanzu&lt;/a&gt;&lt;br&gt;
Discusses why LLM-powered workflows represent a compelling real-world use case for AI agents, especially in enterprise software development and operations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;contributors&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#contributors&quot; aria-label=&quot;contributors permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;It has been truly gratifying to see the level of interest from the community to not only use Spring AI but to contribute back to it.  The entire team is deeply humbled by the experience.  A big shoutout to - &lt;a href=&quot;https://github.com/ThomasVitale&quot;&gt;Thomas Vitale (ThomasVitale)&lt;/a&gt;.  He has driven core features such as &lt;code&gt;@Tools&lt;/code&gt; and RAG among other great contributions and bug fixes.  Bravo!&lt;/p&gt;
&lt;p&gt;I&apos;ve curated the list of contributors, it is long.  I&apos;d like to make a geo-map showing the many people from so many parts of the world.  Thanks!&lt;/p&gt;
&lt;h1 id=&quot;merged-contributors&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#merged-contributors&quot; aria-label=&quot;merged contributors permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Merged Contributors&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/abel533&quot;&gt;abel533&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ahewer&quot;&gt;ahewer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Ahoo-Wang&quot;&gt;Ahoo Wang (Ahoo-Wang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/aseovic&quot;&gt;Aleks Seovic (aseovic)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alexandreroman&quot;&gt;Alexandre Roman (alexandreroman)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/apappascs&quot;&gt;Alexandros Pappas (apappascs)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/alexcheng1982&quot;&gt;alexcheng1982&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ammbra&quot;&gt;Ana Maria Mihalceanu (ammbra)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/anders-swanson&quot;&gt;Anders Swanson (anders-swanson)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/andresssantos&quot;&gt;Andres da Silva Santos (andresssantos)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ashni-mongodb&quot;&gt;ashni-mongodb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AshwinKrishnaK&quot;&gt;Ashwin Krishna K&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/barsha-ghosh721&quot;&gt;Barsha Ghosh (barsha-ghosh721)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bart.veenstra&quot;&gt;Bart Veenstra (bart.veenstra)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bmamatkadyr&quot;&gt;Beksultan (bmamatkadyr)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bmoussaud&quot;&gt;Benoit Moussaud (bmoussaud)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BeomSeogKim&quot;&gt;BeomSeogKim (BeomSeogKim)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/berjanjonker&quot;&gt;Berjan Jonker (berjanjonker)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/birariro&quot;&gt;birariro (birariro)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/BlackBean99&quot;&gt;BlackBean99&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bottlerocketjonny&quot;&gt;bottlerocketjonny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bruno-oliveira&quot;&gt;Bruno Oliveira (bruno-oliveira)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yuhangbin&quot;&gt;cboy (yuhangbin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cc0824&quot;&gt;cc0824 (cc0824)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CChuYong&quot;&gt;CChuYong (CChuYong)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ohiomanbo&quot;&gt;Changho Kim (ohiomanbo)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AntonyCheng&quot;&gt;Chengcheng Wu (AntonyCheng)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/codetheory&quot;&gt;chenwei (codetheory)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Cho-D-YoungRae&quot;&gt;Cho-D-YoungRae&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tzolov&quot;&gt;Christian Tzolov (tzolov)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Claudio-code&quot;&gt;Claudio Silva Junior (Claudio-code)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cocomongg&quot;&gt;cocomongg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cosmin-ionita&quot;&gt;cosmin-ionita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/habuma&quot;&gt;Craig Walls (habuma)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cyPark95&quot;&gt;cyPark95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DadySu&quot;&gt;DadySu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/danvega&quot;&gt;danvega&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chemicL&quot;&gt;Dariusz J?drzejczyk (chemicL)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dafriz&quot;&gt;David Frizelle (dafriz)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ddobrin&quot;&gt;ddobrin (ddobrin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/deepakn27&quot;&gt;deepakn27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dennysfredericci&quot;&gt;Dennys Fredericci (dennysfredericci)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/devcrocod&quot;&gt;devcrocod (devcrocod)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/devholic22&quot;&gt;devholic22&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rusher&quot;&gt;diego (rusher)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Dimibe&quot;&gt;Dimibe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dongfeng3692&quot;&gt;dongfeng3692&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dperezcabrera&quot;&gt;dperezcabrera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dsyer&quot;&gt;dsyer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eddumelendez&quot;&gt;Edd? Mel?ndez (eddumelendez)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/elmahdi43&quot;&gt;elmahdi43&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eltociear&quot;&gt;eltociear&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/emmanuel-ferdman&quot;&gt;Emmanuel Ferdman (emmanuel-ferdman)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/enrico.rampazzo&quot;&gt;Enrico Rampazzo (enrico.rampazzo)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/threos&quot;&gt;Eray Ocak (threos)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fing9&quot;&gt;fing9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/fjtorres-zerocopy&quot;&gt;fjtorres-zerocopy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Flyingblu&quot;&gt;Flyingblu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/g00glen00b&quot;&gt;g00glen00b (g00glen00b)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gabrielduncan&quot;&gt;gabriel duncan (gabrielduncan)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/garethjevans&quot;&gt;Gareth Evans (garethjevans)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geetrawat&quot;&gt;geetrawat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ghdcksgml1&quot;&gt;ghdcksgml1 (ghdcksgml1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GOODBOY008&quot;&gt;gongzhongqiang (GOODBOY008)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mxsl-gr&quot;&gt;GR (mxsl-gr)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Grogdunn&quot;&gt;Grogdunn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hakusai22&quot;&gt;hakusai22&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/1993heqiang&quot;&gt;He Qiang (1993heqiang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/He-Pin&quot;&gt;He-Pin (He-Pin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Hushihaoooooo&quot;&gt;Hu Shihao (Hushihaoooooo)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hungrytech&quot;&gt;hungrytech (hungrytech)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hygl&quot;&gt;hygl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Hyune-c&quot;&gt;Hyune-c&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HyunSangHan&quot;&gt;HYUNSANG HAN (HyunSangHan)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/iAMSagar44&quot;&gt;iAMSagar44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ilopezluna&quot;&gt;Ignasi (ilopezluna)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ilayaperumalg&quot;&gt;Ilayaperumal Gopinathan (ilayaperumalg)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/impactCn&quot;&gt;impactCn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/inpink&quot;&gt;inpink (inpink)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Ivan97&quot;&gt;Ivan97 (Ivan97)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Fj-ivy&quot;&gt;ivy (Fj-ivy)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/izeye&quot;&gt;izeye&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JabezBrew&quot;&gt;JabezBrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jrgleason&quot;&gt;Jackie Gleason (jrgleason)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jaeyeonling&quot;&gt;Jaeyeon Kim (jaeyeonling)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jakkaz&quot;&gt;jakkaz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jpomykala&quot;&gt;Jakub (jpomykala)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jamesward&quot;&gt;James Ward (jamesward)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Jang990&quot;&gt;Jang990 (Jang990)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JavaProgrammerLB&quot;&gt;JavaProgrammerLB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JayPark7821&quot;&gt;JayPark7821&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JM-Lab&quot;&gt;Jemin Huh (JM-Lab)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jiacheo&quot;&gt;jiacheo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jee14&quot;&gt;Jiseung Hyeon (jee14)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jitokim&quot;&gt;Jito Kim (jitokim)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jo-kim&quot;&gt;jo-kim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jobmission&quot;&gt;Jobmission (jobmission)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jxblum&quot;&gt;John Blum (jxblum)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jsilverman26&quot;&gt;John Silverman (jsilverman26)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jonasmuriboe&quot;&gt;Jonas Murib©ª (jonasmuriboe)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jonatan-ivanov&quot;&gt;Jonatan Ivanov (jonatan-ivanov)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dev-jonghoonpark&quot;&gt;Jonghoon Park (dev-jonghoonpark)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JongInWon&quot;&gt;JongIn Won (JongInWon)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/joshlong&quot;&gt;Josh Long (joshlong)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JustinMartz&quot;&gt;Justin Martz (JustinMartz)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jyami-kim&quot;&gt;jyami-kim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/KAMO030&quot;&gt;KAMO030&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kimsunghyun1995&quot;&gt;Kimsunghyun1995 (kimsunghyun1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Kirboyyy&quot;&gt;Kirboyyy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kirkster96&quot;&gt;kirkster96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/koloyyee&quot;&gt;koloyyee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ktm&quot;&gt;ktm (ktm)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kushagraThapar&quot;&gt;Kushagra Thapar (kushagraThapar)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/l-trotta&quot;&gt;l-trotta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lambochen&quot;&gt;Lambochen (lambochen)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ldoguin&quot;&gt;Laurent Doguin (ldoguin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Lee-ChungMu&quot;&gt;Lee-ChungMu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/leijendary&quot;&gt;leijendary (leijendary)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lgxisbb&quot;&gt;lgxisbb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/linarkou&quot;&gt;Linar Abzaltdinov (linarkou)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/liugddx&quot;&gt;Liu Guodong (liugddx)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/smartliujunjie&quot;&gt;LiujunjieALiling (smartliujunjie)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/loiclefevre&quot;&gt;loiclefevre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/loveysuby&quot;&gt;loveysuby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Waischbrot&quot;&gt;Lukas (Waischbrot)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/luocongqiu&quot;&gt;luocongqiu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/m3ss0&quot;&gt;m3ss0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mackey0225&quot;&gt;mackey0225&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/git102347501&quot;&gt;MagicalConch (git102347501)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/magicgone-cn&quot;&gt;magicgone (magicgone-cn)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/magware-dev&quot;&gt;Manuel Andreo Garcia (magware-dev)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/didalgolab&quot;&gt;Mariusz Bernacki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mkheck&quot;&gt;Mark Heckler (mkheck)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/markpollack&quot;&gt;Mark Pollack (markpollack)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/maxjiang153&quot;&gt;Max Jiang (maxjiang153)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/michaelsembwever&quot;&gt;mck (michaelsembwever)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/michael-simons&quot;&gt;Michael J. Simons (michael-simons)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MikeLaptev&quot;&gt;MikeLaptev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mmazurkevich&quot;&gt;Mikhail Mazurkevich (mmazurkevich)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MilosHavranek&quot;&gt;Milo? Havr?nek (MilosHavranek)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/N/A&quot;&gt;Mohammed, Ahmed Yousri Salama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/moon0cean&quot;&gt;moon0cean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mudabirhussain&quot;&gt;Mudabir Hussain (mudabirhussain)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/muthuishere&quot;&gt;muthuishere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ndoe&quot;&gt;ndoe (ndoe)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NerminKarapandzic&quot;&gt;Nermin Karapandzic (NerminKarapandzic)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ngocnhan-tran1996&quot;&gt;Ngoc Nhan Tran (ngocnhan-tran1996)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nichozhan&quot;&gt;nichozhan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nicolaskrier&quot;&gt;Nicolas Krier (nicolaskrier)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zzzadruga&quot;&gt;Nikolai Kulagin (zzzadruga)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nlinhvu&quot;&gt;nlinhvu (nlinhvu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ochnios&quot;&gt;ochnios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/oganes.bozoyan&quot;&gt;Oganes Bozoyan (oganes.bozoyan)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/omarmahamid&quot;&gt;omarmahamid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/PabloSanchi&quot;&gt;PabloSanchi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/paoxia&quot;&gt;Paoxia (paoxia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/PARK-afk&quot;&gt;PARK-afk (PARK-afk)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ppjgit&quot;&gt;pavel (ppjgit)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;Peter Dolukhanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pgerhard&quot;&gt;pgerhard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/piotrooo&quot;&gt;piotrooo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/poonamparhar&quot;&gt;Poonam Parhar (poonamparhar)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pradipkhomane&quot;&gt;pradipkhomane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/PSriVarshan&quot;&gt;PSriVarshan (PSriVarshan)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rapenumaka&quot;&gt;rapenumaka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ricken07&quot;&gt;Ricken Bazolo (ricken07)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rivkode&quot;&gt;rivkode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rmalara&quot;&gt;rmalara (rmalara)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/RobinElysia&quot;&gt;Robin Elysia (RobinElysia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rozza&quot;&gt;rozza&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rubin0&quot;&gt;rubin0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/krsamuel&quot;&gt;samuel-taleez (krsamuel)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/samzhu&quot;&gt;samzhu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/scionaltera&quot;&gt;scionaltera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Seol-JY&quot;&gt;Seol-JY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shahbazaamir&quot;&gt;shahbazaamir (shahbazaamir)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shishuiwuhen2009&quot;&gt;Shishuiwuhen2009 (shishuiwuhen2009)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yuluo-yx&quot;&gt;shown (yuluo-yx)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/skewgod&quot;&gt;skewgod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sobychacko&quot;&gt;Soby Chacko (sobychacko)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/solnone&quot;&gt;Solomon Hsu (solnone)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/status2xx&quot;&gt;status2xx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stefanvassilev&quot;&gt;stefanvassilev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/StudiousXiaoYu&quot;&gt;StudiousXiaoYu (StudiousXiaoYu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cowboysj&quot;&gt;Sujin Kim (cowboysj)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sunyuhan1998&quot;&gt;Sun Yuhan (sunyuhan1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/swapy-27&quot;&gt;swapy-27&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/LaSylv&quot;&gt;Sylvain Blanc (LaSylv)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sdeleuze&quot;&gt;S?bastien Deleuze (sdeleuze)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TarasVovk669&quot;&gt;TarasVovk669&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Temuu-jin&quot;&gt;Temuu-jin (Temuu-jin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tenthe&quot;&gt;tenthe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TeslaCN&quot;&gt;TeslaCN (TeslaCN)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/The-Gamer-01&quot;&gt;The-Gamer-01 (The-Gamer-01)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TheovanKraay&quot;&gt;Theo van Kraay (TheovanKraay)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/thesurlydev&quot;&gt;thesurlydev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ThomasVitale&quot;&gt;Thomas Vitale (ThomasVitale)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TimJ0212&quot;&gt;TimJ0212&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/timosalm&quot;&gt;Timo Salm (timosalm)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/timotheekelly&quot;&gt;timotheekelly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/making&quot;&gt;Toshiaki Maki (making)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/turchinc&quot;&gt;turchinc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/terussell85&quot;&gt;Tyler Russell (terussell85)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/uzhuraul&quot;&gt;uzhuraul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/v891&quot;&gt;v891&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vbartacek&quot;&gt;vbartacek&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/viacheslav-dobrynin&quot;&gt;Viacheslav Dobrynin (viacheslav-dobrynin)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/VictorZZZZ&quot;&gt;Victor Zalevski (VictorZZZZ)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/balamuru&quot;&gt;Vinay Balamuru (balamuru)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/geyingauv&quot;&gt;Virle (geyingauv)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/91wangmeng&quot;&gt;vker (91wangmeng)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Vrryou&quot;&gt;Vrryou&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/waileong&quot;&gt;waileong (waileong)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wandile-gim&quot;&gt;Wandile (wandile-gim)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/csuwl&quot;&gt;Wang Lei (csuwl)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wb04307201&quot;&gt;wb04307201&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yangtuooc&quot;&gt;Wenhao Ma (yangtuooc)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jamespud&quot;&gt;Wenli Tian (jamespud)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Lee-WonJun&quot;&gt;WonJun Lee (Lee-WonJun)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wstever&quot;&gt;wstever (wstever)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xieyucan&quot;&gt;xieyucan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xsg22&quot;&gt;xsg22&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xuweidong253&quot;&gt;xuweidong (xuweidong253)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xwh1108&quot;&gt;Xwh (xwh1108)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/quaff&quot;&gt;Yanming Zhou (quaff)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ykoh42&quot;&gt;ykoh42 (ykoh42)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yybmion&quot;&gt;yoobin_mion (yybmion)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/youngmoneee&quot;&gt;youngmoneee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Yufeng0918&quot;&gt;Yufeng (Yufeng0918)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yulshi&quot;&gt;yulshi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/YunKuiLu&quot;&gt;YunKui Lu (YunKuiLu)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zbqmgldjfh&quot;&gt;zbqmgldjfh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zhangqian9158&quot;&gt;zhangqian9158&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zhaojy01&quot;&gt;Zhao Jianying (zhaojy01)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cycle2zhou&quot;&gt;Zhou Bo (cycle2zhou)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zlzzlzz2l&quot;&gt;zlzzlzz2l&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zucchivan&quot;&gt;zucchivan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/deejay1&quot;&gt;¨©ukasz Jerna? (deejay1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/799332391&quot;&gt;áËÕ¦ (799332391)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/junsepar&quot;&gt;¹ÚÁØ¼­ (junsepar)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/yeseong0412&quot;&gt;¾ç¿¹¼º (yeseong0412)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AI merged the authors mentioned from the previous blogs, if I missed someone, I (and not the AI) apologize.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#whats-next&quot; aria-label=&quot;whats next permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What&apos;s next?&lt;/h2&gt;
&lt;p&gt;Spring AI 1.1 of course!  Stay tuned!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Spring Authorization Server 1.5 goes GA]]></title><link>https://spring.io/blog/2025/05/20/spring-authorization-server-1-5-goes-ga</link><guid isPermaLink="true">https://spring.io/blog/2025/05/20/spring-authorization-server-1-5-goes-ga</guid><dc:creator><![CDATA[jgrandja]]></dc:creator><pubDate>Tue, 20 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the team and everyone who has contributed, it is my pleasure to announce the release of Spring Authorization Server 1.5.&lt;/p&gt;
&lt;p&gt;The 1.5 release contains a few noteworthy new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add support for OAuth 2.0 Pushed Authorization Requests (PAR) &lt;a href=&quot;https://github.com/spring-projects/spring-authorization-server/pull/1925&quot;&gt;(gh-1925)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support OAuth 2.0 Demonstrating Proof of Possession (DPoP) &lt;a href=&quot;https://github.com/spring-projects/spring-authorization-server/issues/1813&quot;&gt;(gh-1813)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support POST for authorization code request flow &lt;a href=&quot;https://github.com/spring-projects/spring-authorization-server/pull/1874&quot;&gt;(gh-1874)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started using Spring Authorization Server, see the &lt;a href=&quot;https://docs.spring.io/spring-authorization-server/reference/getting-started.html&quot;&gt;Getting Started&lt;/a&gt; chapter of the reference documentation and the &lt;a href=&quot;https://github.com/spring-projects/spring-authorization-server/tree/main/samples&quot;&gt;samples&lt;/a&gt; to become familiar with setup and configuration.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://spring.io/projects/spring-authorization-server&quot;&gt;Project Page&lt;/a&gt; | &lt;a href=&quot;https://github.com/spring-projects/spring-authorization-server/issues&quot;&gt;GitHub Issues&lt;/a&gt; | &lt;a href=&quot;https://github.com/orgs/spring-projects/projects/8/views/21&quot;&gt;Project Board&lt;/a&gt;&lt;/p&gt;</content:encoded></item></channel></rss>